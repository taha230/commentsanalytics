# Generated by Django 2.2.10 on 2021-09-28 19:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bulk',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('bulk_start_time_slot', models.DateTimeField()),
                ('bulk_end_time_slot', models.DateTimeField()),
                ('name', models.CharField(blank=True, max_length=10000)),
                ('status', models.CharField(choices=[('IN_QUEUE', 'In Queue'), ('FAILED', 'Failed'), ('IN_PROGRESS', 'In progress'), ('COMPLETED', 'Completed')], max_length=50)),
                ('request_type', models.CharField(choices=[('LINKEDIN', 'Linkedin'), ('INSTAGRAM', 'Instagram'), ('YOUTUBE', 'Youtube'), ('PINTEREST', 'Pinterest'), ('FACEBOOK', 'Facebook'), ('TWITTER', 'Twitter'), ('WEBSITE', 'Website'), ('KNOWLEDGEPANEL', 'KnowledgePanel')], max_length=50)),
                ('total_count', models.FloatField(default=0)),
                ('passed_count', models.FloatField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bulk', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=50)),
                ('count', models.FloatField(default=0)),
                ('price', models.FloatField(default=0)),
                ('discount', models.FloatField(default=0)),
                ('status', models.CharField(choices=[('ENABLE', 'Enable'), ('DISABLE', 'Disable')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='User_Log',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('activity', models.CharField(blank=True, max_length=10000)),
                ('time_slot', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_log', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=10000)),
                ('body', models.CharField(blank=True, max_length=10000)),
                ('answer', models.CharField(blank=True, max_length=10000)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('ANSWERED', 'Answered'), ('NOTIFICATION', 'Notification')], max_length=50)),
                ('ticket_time_slot', models.DateTimeField()),
                ('answer_time_slot', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('request_time_slot', models.DateTimeField()),
                ('status', models.CharField(choices=[('SUCCESS', 'Success'), ('FAILED', 'Failed')], max_length=50)),
                ('run_type', models.CharField(choices=[('BULK', 'Bulk'), ('SINGLE', 'Single'), ('DEMO', 'Demo')], max_length=50)),
                ('request_type', models.CharField(choices=[('LINKEDIN', 'Linkedin'), ('INSTAGRAM', 'Instagram'), ('YOUTUBE', 'Youtube'), ('PINTEREST', 'Pinterest'), ('FACEBOOK', 'Facebook'), ('TWITTER', 'Twitter'), ('WEBSITE', 'Website'), ('KNOWLEDGEPANEL', 'KnowledgePanel')], max_length=50)),
                ('query', models.CharField(blank=True, max_length=5000)),
                ('result', models.CharField(blank=True, max_length=5000)),
                ('bulk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request', to='home.Bulk')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('CANCEL', 'Cancel'), ('SUCCESS', 'Success'), ('PAYMENT_FAILED', 'Payment Failed')], max_length=50)),
                ('payment_type', models.CharField(choices=[('VISA_CARD', 'Visa Card'), ('PAYPALL', 'Paypal'), ('MASTER_CARD', 'Master Card'), ('STRIPE', 'Stripe'), ('WEBMONEY', 'Web Money')], max_length=50)),
                ('payment_time_slot', models.DateTimeField(blank=True, default=None, null=True)),
                ('price', models.FloatField(default=0)),
                ('plan', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='home.Plan')),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='payment', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
